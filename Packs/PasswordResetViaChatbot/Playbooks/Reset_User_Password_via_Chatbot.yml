id: Reset User Password via Chatbot
version: -1
name: Reset User Password via Chatbot
description: |-
  This playbooks should be triggered by a Slack or a Teams message from a user requesting to reset their forgotten password.
  The playbook seeks approval before resetting the user's password. It then generates a new password for the user, meeting the complexity criteria defined in the playbook inputs, and sends an email to the user with the new password.
  The only information required from the user requesting the password reset in this playbook is the "reporteremailaddress" field, which should hold the email address of the user asking for password reset.
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: d13011c5-a1c5-48d8-8fdb-aafef1482fa8
    type: start
    task:
      id: d13011c5-a1c5-48d8-8fdb-aafef1482fa8
      version: -1
      name: ""
      iscommand: false
      brand: ""
      description: ''
    nexttasks:
      '#none#':
      - "5"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 450,
          "y": 210
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "1":
    id: "1"
    taskid: 81df7510-c10c-4411-81c0-b676765c0d36
    type: regular
    task:
      id: 81df7510-c10c-4411-81c0-b676765c0d36
      version: -1
      name: Reset user password in AD & send email
      description: |-
        Generates password,
        Set an AD user account with this password.
        Enable the account.
        Send mail to the user with tha account information.
        This script is running `send-mail` command, make sure there is a matching Integration configurated.
      scriptName: IAMInitADUser
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "19"
    scriptarguments:
      displayname:
        complex:
          root: ActiveDirectory.Users
          accessor: displayName
      email:
        complex:
          root: incident
          accessor: reporteremailaddress
      email_subject:
        complex:
          root: inputs.UserEmailSubject
      max_digits:
        complex:
          root: inputs.PasswordMaxDigits
      max_lcase:
        complex:
          root: inputs.PasswordMaxLowercase
      max_symbols:
        complex:
          root: inputs.PasswordMaxSymbols
      max_ucase:
        complex:
          root: inputs.PasswordMaxUppercase
      min_digits:
        complex:
          root: inputs.PasswordMinDigits
      min_lcase:
        complex:
          root: inputs.PasswordMinLowercase
      min_symbols:
        complex:
          root: inputs.PasswordMinSymbols
      min_ucase:
        complex:
          root: inputs.PasswordMinUppercase
      sAMAccountName:
        complex:
          root: ActiveDirectory.Users
          accessor: sAMAccountName
      to_email:
        complex:
          root: incident
          accessor: reporteremailaddress
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1030,
          "y": 1780
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "5":
    id: "5"
    taskid: beb4d543-5dc2-4dc1-813f-8e5ba2c40134
    type: condition
    task:
      id: beb4d543-5dc2-4dc1-813f-8e5ba2c40134
      version: -1
      name: Is confirmation required for the password reset?
      description: Checks whether the password reset should be approved by a specific user or by the manager of the user that asked to reset their password. This is configurable through the ConfirmationTarget playbook input.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "14"
      Yes, from manager:
      - "6"
      Yes, from specified user:
      - "8"
    separatecontext: false
    conditions:
    - label: Yes, from manager
      condition:
      - - operator: isEqualString
          left:
            value:
              complex:
                root: inputs.ConfirmationTarget
            iscontext: true
          right:
            value:
              simple: Manager
          ignorecase: true
    - label: Yes, from specified user
      condition:
      - - operator: containsString
          left:
            value:
              complex:
                root: inputs.ConfirmationTarget
            iscontext: true
          right:
            value:
              simple: '@'
    view: |-
      {
        "position": {
          "x": 450,
          "y": 360
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "6":
    id: "6"
    taskid: a9fb8192-05c3-4777-81e4-453c89ac6325
    type: playbook
    task:
      id: a9fb8192-05c3-4777-81e4-453c89ac6325
      version: -1
      name: Active Directory - Get User Manager Details
      description: Takes an email address or a username of a user account in Active Directory, and returns the email address of the user's manager.
      playbookName: Active Directory - Get User Manager Details
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "7"
    scriptarguments:
      UserEmail:
        complex:
          root: incident
          accessor: reporteremailaddress
          transformers:
          - operator: uniq
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 0,
          "y": 530
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "7":
    id: "7"
    taskid: 357074ea-86fb-4b99-8d48-222a64b2f251
    type: condition
    task:
      id: 357074ea-86fb-4b99-8d48-222a64b2f251
      version: -1
      name: Was the manager email retrieved?
      description: Checks whether the email of the user's manager was retrieved from Active Directory.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "10"
      "yes":
      - "8"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isNotEmpty
          left:
            value:
              complex:
                root: UserManagerEmail
            iscontext: true
    view: |-
      {
        "position": {
          "x": 0,
          "y": 690
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "8":
    id: "8"
    taskid: 90094b52-036d-4921-8f71-df9917163c0b
    type: condition
    task:
      id: 90094b52-036d-4921-8f71-df9917163c0b
      version: -1
      name: Ask - is the reset approved or disapproved?
      description: Asks the user's manager or the user specified in the ConfirmationTarget playbook input through email, whether the password reset is approved or not.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      Approve Reset:
      - "14"
      Disapprove Reset:
      - "10"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 450,
          "y": 870
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    message:
      to:
        complex:
          root: UserManagerEmail
          transformers:
          - operator: SetIfEmpty
            args:
              applyIfEmpty: {}
              defaultValue:
                value:
                  simple: inputs.ConfirmationTarget
                iscontext: true
      subject:
        complex:
          root: inputs.ConfirmationEmailSubject
      body:
        complex:
          root: inputs.ConfirmationEmailBody
          transformers:
          - operator: replace
            args:
              limit: {}
              replaceWith:
                value:
                  simple: incident.reporteremailaddress
                iscontext: true
              toReplace:
                value:
                  simple: '[PLACEHOLDER]'
      methods:
      - email
      format: ""
      bcc:
      cc:
      timings:
        retriescount: 2
        retriesinterval: 360
        completeafterreplies: 1
      replyOptions:
      - Approve Reset
      - Disapprove Reset
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "10":
    id: "10"
    taskid: e24e6a8e-1147-4e83-8251-a30363cefe3a
    type: regular
    task:
      id: e24e6a8e-1147-4e83-8251-a30363cefe3a
      version: -1
      name: Send email to the user saying reset was not approved
      description: Sends an email using EWS.
      script: '|||send-mail'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "11"
    scriptarguments:
      body:
        simple: Your request for a password reset could not be approved or was disapproved. Please contact helpdesk for assistance with resetting your password.
      subject:
        simple: Password Reset Not Approved
      to:
        complex:
          root: incident
          accessor: reporteremailaddress
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 450,
          "y": 2250
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "11":
    id: "11"
    taskid: a930ccc1-a514-455f-85a1-90b82121e0b8
    type: regular
    task:
      id: a930ccc1-a514-455f-85a1-90b82121e0b8
      version: -1
      name: Close the incident
      description: Closes the current incident.
      script: Builtin|||closeInvestigation
      type: regular
      iscommand: true
      brand: Builtin
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1030,
          "y": 2430
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "12":
    id: "12"
    taskid: 000181de-a8a1-46f9-81b1-75eacfc7095d
    type: regular
    task:
      id: 000181de-a8a1-46f9-81b1-75eacfc7095d
      version: -1
      name: Get AD user's sAMAccountName
      description: Retrieves detailed information about a user account. The user can be specified by name, email address, or as an Active Directory Distinguished Name (DN). If no filter is specified, all users are returned.
      script: '|||ad-get-user'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "13"
    scriptarguments:
      email:
        complex:
          root: incident
          accessor: reporteremailaddress
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1030,
          "y": 1360
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: true
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "13":
    id: "13"
    taskid: f7d7adb1-bd54-423c-84cb-b27c3d75cafe
    type: condition
    task:
      id: f7d7adb1-bd54-423c-84cb-b27c3d75cafe
      version: -1
      name: Was a user found in Active Directory?
      description: Checks whether the user was found in Active Directory.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "10"
      "yes":
      - "1"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isNotEmpty
          left:
            value:
              complex:
                root: ActiveDirectory.Users
                accessor: sAMAccountName
            iscontext: true
    view: |-
      {
        "position": {
          "x": 1030,
          "y": 1520
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "14":
    id: "14"
    taskid: 0b74a035-3990-454f-8efa-c4f6b32e7078
    type: condition
    task:
      id: 0b74a035-3990-454f-8efa-c4f6b32e7078
      version: -1
      name: Where should the password be reset?
      description: Checks where the user's password reset. Some organizations have Okta provisioning in place, in which case they may prefer to reset the password in Okta. Other organizations may use Active Directory directly.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "10"
      Active Directory:
      - "12"
      Okta:
      - "17"
    separatecontext: false
    conditions:
    - label: Active Directory
      condition:
      - - operator: isEqualString
          left:
            value:
              complex:
                root: inputs.TargetProduct
            iscontext: true
          right:
            value:
              simple: Active Directory
          ignorecase: true
      - - operator: isNotEmpty
          left:
            value:
              complex:
                root: modules
                filters:
                - - operator: isEqualString
                    left:
                      value:
                        simple: modules.brand
                      iscontext: true
                    right:
                      value:
                        simple: Active Directory Query v2
                - - operator: isEqualString
                    left:
                      value:
                        simple: modules.state
                      iscontext: true
                    right:
                      value:
                        simple: active
            iscontext: true
    - label: Okta
      condition:
      - - operator: isEqualString
          left:
            value:
              complex:
                root: inputs.TargetProduct
            iscontext: true
          right:
            value:
              simple: Okta
          ignorecase: true
      - - operator: isNotEmpty
          left:
            value:
              complex:
                root: modules
                filters:
                - - operator: isEqualString
                    left:
                      value:
                        simple: modules.brand
                      iscontext: true
                    right:
                      value:
                        simple: Okta v2
                - - operator: isEqualString
                    left:
                      value:
                        simple: modules.state
                      iscontext: true
                    right:
                      value:
                        simple: active
            iscontext: true
    view: |-
      {
        "position": {
          "x": 1030,
          "y": 1120
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "15":
    id: "15"
    taskid: f7c4c513-05f2-4b00-8867-2fc55e476006
    type: regular
    task:
      id: f7c4c513-05f2-4b00-8867-2fc55e476006
      version: -1
      name: Reset user password in Okta & send email
      description: |-
        Generates a password and sets an Okta user account with that password.
        Enables the account.
        Sends an  email to the user with the account information.
        This script is running the `send-mail` command, make sure there is a mail sender integration configured.
      scriptName: IAMInitOktaUser
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "20"
    scriptarguments:
      displayname:
        complex:
          root: Account
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: Account.Type
                iscontext: true
              right:
                value:
                  simple: Okta
              ignorecase: true
          accessor: DisplayName
      email_subject:
        complex:
          root: inputs.UserEmailSubject
      max_digits:
        complex:
          root: inputs.PasswordMaxDigits
      max_lcase:
        complex:
          root: inputs.PasswordMaxLowercase
      max_symbols:
        complex:
          root: inputs.PasswordMaxSymbols
      max_ucase:
        complex:
          root: inputs.PasswordMaxUppercase
      min_digits:
        complex:
          root: inputs.PasswordMinDigits
      min_lcase:
        complex:
          root: inputs.PasswordMinLowercase
      min_symbols:
        complex:
          root: inputs.PasswordMinSymbols
      min_ucase:
        complex:
          root: inputs.PasswordMinUppercase
      to_email:
        complex:
          root: Account
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: Account.Type
                iscontext: true
              right:
                value:
                  simple: Okta
              ignorecase: true
          accessor: Email
      username:
        complex:
          root: Account
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: Account.Type
                iscontext: true
              right:
                value:
                  simple: Okta
              ignorecase: true
          accessor: Username
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1600,
          "y": 1780
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: true
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "17":
    id: "17"
    taskid: 05a8b906-b850-4641-85ab-e3ffccd30ee4
    type: regular
    task:
      id: 05a8b906-b850-4641-85ab-e3ffccd30ee4
      version: -1
      name: Get Okta user information
      description: Fetches information for a single user. You must enter one or more parameters for the command to run.
      script: '|||okta-get-user'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "18"
    scriptarguments:
      username:
        complex:
          root: incident
          accessor: reporteremailaddress
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1600,
          "y": 1360
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "18":
    id: "18"
    taskid: 941f14b0-1181-4769-8016-78265c322406
    type: condition
    task:
      id: 941f14b0-1181-4769-8016-78265c322406
      version: -1
      name: Was a user found in Okta?
      description: Checks whether the user was found in Okta.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "10"
      "yes":
      - "15"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isNotEmpty
          left:
            value:
              complex:
                root: Account
                filters:
                - - operator: isEqualString
                    left:
                      value:
                        simple: Account.Type
                      iscontext: true
                    right:
                      value:
                        simple: Okta
                    ignorecase: true
                accessor: Username
            iscontext: true
    view: |-
      {
        "position": {
          "x": 1600,
          "y": 1520
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "19":
    id: "19"
    taskid: 4a5c9bf4-42b9-4aa4-866f-5997b0f4bcfc
    type: condition
    task:
      id: 4a5c9bf4-42b9-4aa4-866f-5997b0f4bcfc
      version: -1
      name: Was the password reset successful?
      description: Checks whether the password reset was successful, and whether an email with the new password was sent successfully.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "10"
      "yes":
      - "11"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isEqualString
          left:
            value:
              simple: IAM.InitADUser.success
            iscontext: true
          right:
            value:
              simple: "True"
          ignorecase: true
      - - operator: isEqualString
          left:
            value:
              simple: IAM.InitADUser.sentMail
            iscontext: true
          right:
            value:
              simple: "True"
          ignorecase: true
    view: |-
      {
        "position": {
          "x": 1030,
          "y": 1970
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "20":
    id: "20"
    taskid: d1a35531-7cd8-4dab-848f-5a848fbb0b03
    type: condition
    task:
      id: d1a35531-7cd8-4dab-848f-5a848fbb0b03
      version: -1
      name: Was the password reset successful?
      description: Checks whether the password reset was successful, and whether an email with the new password was sent successfully.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "10"
      "yes":
      - "11"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isEqualString
          left:
            value:
              simple: IAM.InitOktaUser.success
            iscontext: true
          right:
            value:
              simple: "True"
          ignorecase: true
      - - operator: isEqualString
          left:
            value:
              simple: IAM.InitOktaUser.sentMail
            iscontext: true
          right:
            value:
              simple: "True"
          ignorecase: true
    view: |-
      {
        "position": {
          "x": 1600,
          "y": 1970
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
view: |-
  {
    "linkLabelsPosition": {
      "13_10_#default#": 0.1,
      "13_1_yes": 0.46,
      "14_10_#default#": 0.21,
      "14_12_Active Directory": 0.65,
      "18_10_#default#": 0.1,
      "18_15_yes": 0.42,
      "19_10_#default#": 0.17,
      "19_11_yes": 0.1,
      "20_10_#default#": 0.11,
      "20_11_yes": 0.1,
      "5_14_#default#": 0.32,
      "5_6_Yes, from manager": 0.57,
      "5_8_Yes, from specified user": 0.26,
      "7_10_#default#": 0.1,
      "7_8_yes": 0.43,
      "8_10_Disapprove Reset": 0.1
    },
    "paper": {
      "dimensions": {
        "height": 2315,
        "width": 1980,
        "x": 0,
        "y": 210
      }
    }
  }
inputs:
- key: PasswordMaxDigits
  value:
    simple: "4"
  required: false
  description: The maximum number of digits in the generated password. If no value is specified, a value of 10 will be used.
  playbookInputQuery:
- key: PasswordMaxLowercase
  value:
    simple: "4"
  required: false
  description: Maximum number of lower case characters to include in password. If no value is specified, a value of 10 will be used.
  playbookInputQuery:
- key: PasswordMaxSymbols
  value:
    simple: "4"
  required: false
  description: Maximum number of symbols to include in password. If no value is specified, a value of 10 will be used.
  playbookInputQuery:
- key: PasswordMaxUppercase
  value:
    simple: "4"
  required: false
  description: Maximum number of upper case characters to include in password. If no value is specified, a value of 10 will be used.
  playbookInputQuery:
- key: PasswordMinDigits
  value:
    simple: "2"
  required: false
  description: Minimum number of digits to include in password. If no value is specified, a value of 0 will be used.
  playbookInputQuery:
- key: PasswordMinLowercase
  value:
    simple: "2"
  required: false
  description: Minimum number of lower case characters to include in password. If no value is specified, a value of 0 will be used.
  playbookInputQuery:
- key: PasswordMinSymbols
  value:
    simple: "2"
  required: false
  description: Minimum number of symbols to include in password. If no value is specified, a value of 0 will be used.
  playbookInputQuery:
- key: PasswordMinUppercase
  value:
    simple: "2"
  required: false
  description: Minimum number of upper case characters to include in password. If no value is specified, a value of 0 will be used.
  playbookInputQuery:
- key: UserEmailSubject
  value:
    simple: User Password Reset
  required: false
  description: The subject of the email with the password that will be sent to the user.
  playbookInputQuery:
- key: ConfirmationTarget
  value:
    simple: ivandijk@paloaltonetworks.com
  required: false
  description: |-
    Determines who will confirm the password reset. Possible values are: left blank, email address of the user that will confirm the reset, or "Manager".

    If no value is specified - confirmation will not be required when resetting the password.

    If the value of "Manager" is specified - the user's manager email will be retrieved from Active Directory, and a confirmation email will be sent to the manager to allow or decline the password reset.

    If an email is specified  - a confirmation email will be sent to the email specified to allow or decline the password reset.
  playbookInputQuery:
- key: ConfirmationEmailSubject
  value:
    simple: Action Required - User Password Reset
  required: false
  description: |-
    Optional - applicable only if the "ConfirmationTarget" input is not blank.
    The subject of the email that will be sent to approve or disapprove the password reset. This email would be sent to the user's manager, IT staff or anyone else specified.
  playbookInputQuery:
- key: ConfirmationEmailBody
  value:
    simple: |-
      User [PLACEHOLDER] asked to reset their password.
      Please allow or decline the password reset.
  required: false
  description: |-
    Optional - applicable only if the "ConfirmationTarget" input is not blank.
    The body of the email that will be sent to approve or disapprove the password reset. This email would be sent to the user's manager, IT staff or anyone else specified.
  playbookInputQuery:
- key: TargetProduct
  value:
    simple: Active Directory
  required: false
  description: |-
    Determines whether the user password will be reset. Some organizations provision the data from Okta to Active Directory, so they may choose to reset the password in Okta instead of Active Directory.
    Possible values are (choose one):
    - Active Directory
    - Okta
  playbookInputQuery:
outputs: []
tests:
- No tests (auto formatted)
fromversion: 6.5.0
