[MODEL: dataset="juniper_srx_raw"]
alter
    event_type = arrayindex(regextract(_raw_log,"(\w+\[\d+\])\:\s"),0)
| filter
    event_type contains "["
| alter timestamp = arrayindex(regextract(_raw_log,"(\d+\:\d+:\d+\.\d+)"), 0)
| alter hostname = arrayindex(regextract(_raw_log,"([^\s]+)\s\w+\[\d+\]\:\s"),0)
| alter process = arrayindex(regextract(_raw_log,"\s(\w+)\[\d+"),0)
| alter processID = arrayindex(regextract(_raw_log,"\s\w+\[(\d+)\]\:\s"),0)
| alter username = arrayindex(regextract(_raw_log,"ser\s\'([^\']+)"),0)
| alter message = arrayindex(regextract(_raw_log,"\s\w+\[\d+\]\:\s[^\d]+:\s([^\\]+) "),0)
| alter tag_name = arrayindex(regextract(_raw_log,"\:\s(\w+\_\w+)"),0)
| alter
    xdm.observer.name = hostname,
    xdm.event.operation = process,
    xdm.source.process.pid = to_number(processID),
    xdm.source.user.username = username,
    xdm.alert.description = message,
    xdm.event.type = tag_name;

alter start_raw_log = arrayindex(regextract(_raw_log , "^(\<\d+\>)"),0)
| filter len(start_raw_log) >0
| alter Timestamp = arrayindex(regextract(_raw_log,"(\d{4}\-\d{2}\-\d{2}T\d+\:\d+\:\d+.\d+)"), 0)
| alter destination_address = arrayindex(regextract(_raw_log,"destination\-address\=\"(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})"),0)
| alter file_name = arrayindex(regextract(_raw_log,"\sfilename\=\"([^\"]+)\""),0)
// extract url
| alter url1 = arrayindex(regextract(_raw_log,"url\=\"(\S+)."),0)
| alter url2 = arrayindex(regextract(_raw_log,"URL\=(\S+)"),0)
| alter url = coalesce(url1,url2)
// end extract url
| alter source_port = arrayindex(regextract(_raw_log,"source\-port\=\"(\d+)"),0)
| alter destination_port = arrayindex(regextract(_raw_log,"destination\-port\=\"(\d+)"),0)
| alter Reason = arrayindex(regextract(_raw_log,"REASON\=\"([^\"]+)\""),0)
| alter Object = arrayindex(regextract(_raw_log,"OBJ\=.(\S+)"),0)
| alter profile_name = arrayindex(regextract(_raw_log,"PROFILE\=\"([^\"]+)"),0)
| alter source_zone = arrayindex(regextract(_raw_log,"source\-zone\-name\=\"([^\"]+)"),0)
| alter Packet_Incoming_Interface = arrayindex(regextract(_raw_log,"packet\-incoming\-interface\=\"([^\"]+)"),0)
| alter Roles = arrayindex(regextract(_raw_log,"roles=\"([^\"]+)"),0)
| alter Username = arrayindex(regextract(_raw_log,"username\=\"([^\"]+)"),0)
| alter Destination_Zone_Name = arrayindex(regextract(_raw_log,"destination\-zone\-name\=\"([^\"]+)"),0)
| alter Policy_Name = arrayindex(regextract(_raw_log,"policy\-name\=\"([^\"]+)"),0)
| alter Protocol_ID = arrayindex(regextract(_raw_log,"protocol\-id\=\"([^\"]+)"),0)
| alter Destination_Nat_Rule_Name = arrayindex(regextract(_raw_log,"dst\-nat\-rule\-name\=\"([^\"]+)"),0)
| alter Source_Nat_Rule_Name = arrayindex(regextract(_raw_log,"src\-nat\-rule\-name\=\"([^\"]+)"),0)
| alter Nat_Destination_Port = arrayindex(regextract(_raw_log,"nat\-destination\-port\=\"([^\"]+)"),0)
| alter Nat_Source_Port = arrayindex(regextract(_raw_log,"nat\-source\-port\=\"([^\"]+)"),0)
| alter Nat_Source_Address = arrayindex(regextract(_raw_log,"nat\-source\-address\=\"([^\"]+)"),0)
| alter Service_Name = arrayindex(regextract(_raw_log,"service\-name=\"([^\"]+)"),0)
| alter Nat_Destination_IP = arrayindex(regextract(_raw_log,"nat\-destination\-address\=\"(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})"),0)
// extract source_ip
| alter source_address_ipv4 = arrayindex(regextract(_raw_log,"source\-address\=\"(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})"), 0)
| alter source_adderss_ipv6 = arrayindex(regextract(_raw_log,"source\-address\=\"(\w+\:\w+\:\w+\:\w+\:\w+\:\w+\:\w+\:\w+)"), 0)
// end extract source_ip
| alter
    xdm.source.ipv4 = source_address_ipv4,
    xdm.source.ipv6 = source_adderss_ipv6,
    xdm.target.ipv4 = Destination_address,
    xdm.target.port = to_integer(Destination_Port),
    xdm.source.port=to_integer(source_port),
    xdm.network.rule = Source_Nat_Rule_Name,
    xdm.network.ip_protocol = if(Protocol_ID="0","HOPOPT",Protocol_ID="1",XDM_CONST.IP_PROTOCOL_ICMP,Protocol_ID="2","IGMP",Protocol_ID="3","GGP",Protocol_ID="4","IP",Protocol_ID="5","ST",Protocol_ID="6",XDM_CONST.IP_PROTOCOL_TCP,Protocol_ID="7","CBT",Protocol_ID="8","EGP",Protocol_ID="9","IGP",Protocol_ID="10","BBN_RCC_MON",Protocol_ID="11","NVP_II",Protocol_ID="12","PUP",Protocol_ID="13","ARGUS",Protocol_ID="14","EMCON",Protocol_ID="15","XNET",Protocol_ID="16","CHAOS",Protocol_ID="17",XDM_CONST.IP_PROTOCOL_UDP,Protocol_ID="18","MUX",Protocol_ID="19","DCN_MEAS",Protocol_ID="20","HMP",Protocol_ID="21","PRM",Protocol_ID="22","XNS_IDP",Protocol_ID="23","TRUNK_1",Protocol_ID="24","TRUNK_2",Protocol_ID="25","LEAF_1",Protocol_ID="26","LEAF_2",Protocol_ID="27","RDP",Protocol_ID="28","IRTP",Protocol_ID="29","ISO_TP4",Protocol_ID="30","NETBLT",Protocol_ID="31","MFE_NSP",Protocol_ID="32","MERIT_INP",Protocol_ID="33","DCCP",Protocol_ID="34","3PC",Protocol_ID="35","IDPR",Protocol_ID="36","XTP",Protocol_ID="37","DDP",Protocol_ID="38","IDPR_CMTP",Protocol_ID="39","TP",Protocol_ID="40","IL",Protocol_ID="41","IPV6",Protocol_ID="42","SDRP",Protocol_ID="43","IPV6_ROUTE",Protocol_ID="44","IPV6_FRAG",Protocol_ID="45","IDRP",Protocol_ID="46","RSVP",Protocol_ID="47","GRE",Protocol_ID="48","DSR",Protocol_ID="49","BNA",Protocol_ID="50","ESP",Protocol_ID="51","AH",Protocol_ID="52","I_NLSP",Protocol_ID="53","SWIPE",Protocol_ID="54","NARP",Protocol_ID="55","MOBILE",Protocol_ID="56","TLSP",Protocol_ID="57","SKIP",Protocol_ID="58","IPV6_ICMP",Protocol_ID="59","IPV6_NONXT",Protocol_ID="60","IPV6_OPTS",Protocol_ID="62","CFTP",Protocol_ID="64","SAT_EXPAK",Protocol_ID="65","KRYPTOLAN",Protocol_ID="66","RVD",Protocol_ID="67","IPPC",Protocol_ID="69","SAT_MON",Protocol_ID="70","VISA",Protocol_ID="71","IPCV",Protocol_ID="72","CPNX",Protocol_ID="73","CPHB",Protocol_ID="74","WSN",Protocol_ID="75","PVP",Protocol_ID="76","BR_SAT_MON",Protocol_ID="77","SUN_ND",Protocol_ID="78","WB_ON",Protocol_ID="79","WB_EXPAK",Protocol_ID="80","ISO_IP",Protocol_ID="81","VMTP",Protocol_ID="82","SECURE_VMTP",Protocol_ID="83","VINES",Protocol_ID="84","TTP",Protocol_ID="85","NSFNET_IGP",Protocol_ID="86","DGP",Protocol_ID="87","TCF",Protocol_ID="88","EIGRP",Protocol_ID="89","OSPFIGP",Protocol_ID="90","SPRITE_RPC",Protocol_ID="91","LARP",Protocol_ID="92","MTP",Protocol_ID="93","AX25",Protocol_ID="94","IPIP",Protocol_ID="95","MICP",Protocol_ID="96","SCC_SP",Protocol_ID="97","ETHERIP",Protocol_ID="98","ENCAP",Protocol_ID="100","GMTP",Protocol_ID="101","IFMP",Protocol_ID="102","PNNI",Protocol_ID="103","PIM",Protocol_ID="104","ARIS",Protocol_ID="105","SCPS",Protocol_ID="106","QNX",Protocol_ID="107","AN",Protocol_ID="108","IPCOMP",Protocol_ID="09","S",Protocol_ID="110","COMPAQ_PEER",Protocol_ID="111","IPX_IN_IP",Protocol_ID="112","VRRP",Protocol_ID="113","PGM",Protocol_ID="115","L2TP",Protocol_ID="116","DDX",Protocol_ID="117","IATP",Protocol_ID="118","STP",Protocol_ID="120","SRP",Protocol_ID="121","UTI",Protocol_ID="122","SMP",Protocol_ID="123","SM",Protocol_ID="124","PTP",Protocol_ID="125","ISIS",Protocol_ID="12","FIRE",Protocol_ID="127","CRTP",Protocol_ID="128","CRUDP",Protocol_ID="129","SSCOPMCE",Protocol_ID="130","IPLT",Protocol_ID="131","SPS",Protocol_ID="132","PIPE",Protocol_ID="133","SCTP",Protocol_ID="134","FC",Protocol_ID="135","RSVP_E2E_IGNORE",Protocol_ID="136","MOBILITY",Protocol_ID="137","UDPLITE",Protocol_ID="138","MPLS_IN_IP",to_string(Protocol_ID)),
    xdm.source.zone = Source_Zone,
    xdm.target.zone = Destination_Zone_Name,
    xdm.target.user.username = Username,
    xdm.source.user.employee_id = Roles,
    xdm.target.interface = Packet_Incoming_Interface;