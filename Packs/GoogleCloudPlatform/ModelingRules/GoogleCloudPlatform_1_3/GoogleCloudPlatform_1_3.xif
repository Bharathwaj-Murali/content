[MODEL: dataset=google_cloud_logging_raw]
filter logName in ("*data_access","*activity", "*system_event", "*policy")
|alter resourceName=json_extract_scalar(PROTOPAYLOAD,"$.resourceName"),
operation=json_extract_scalar(PROTOPAYLOAD,"$.methodName"),
callerIpv4=json_extract_scalar(PROTOPAYLOAD,"$.requestMetadata.callerIp"),
callerAgent=json_extract_scalar(PROTOPAYLOAD,"$.requestMetadata.callerSuppliedUserAgent"),
serviceName=json_extract_scalar(PROTOPAYLOAD,"$.serviceName"),
authorizationInfo=arrayindex(json_extract_array(PROTOPAYLOAD,"$.authorizationInfo"),0)
|alter outcome=json_extract_scalar(authorizationInfo,"$.granted"),
operationType=json_extract_scalar(authorizationInfo,"$.permission"),
AuthroizedresourceName=json_extract_scalar(authorizationInfo,"$.resourceAttributes.name"),
ProtoLocation=json_extract_scalar(PROTOPAYLOAD,"$.resourceLocation.currentLocations"),
eventID=json_extract_scalar(OPERATION,"$.OPERATION.id"),
location=json_extract_scalar(RESOURCE,"$.labels.location"),
locationZone=json_extract_scalar(RESOURCE,"$.labels.zone"),
project=json_extract_scalar(RESOURCE,"$.labels.project_id"),
requestType=json_extract_scalar(PROTOPAYLOAD,"$['@type']"), 
requestTypeExtract = json_extract_scalar(PROTOPAYLOAD,"$.request"),
responseStatus=json_extract_scalar(PROTOPAYLOAD,"$.response.status"),
resourceID=json_extract_scalar(RESOURCE,"$.labels.instance_id"),
resourceType=json_extract_scalar(RESOURCE,"$['@type']")
| alter requestTypeAlter=json_extract_scalar(requestTypeExtract,"$['@type']") 
|alter 
xdm.target.resource.name=coalesce(resourceName,AuthroizedresourceName),
xdm.event.description=operation,
xdm.source.ipv4=callerIpv4,
xdm.source.user_agent=callerAgent,
xdm.event.outcome=coalesce(outcome,responseStatus),
xdm.event.operation=operationType,
xdm.event.id=coalesce(INSERTID,eventID),
xdm.source.user.username=serviceName,
xdm.target.cloud.region=location,
xdm.target.cloud.zone=locationZone,
xdm.alert.severity=severity,
xdm.source.cloud.project=project,
xdm.event.type=coalesce(requestTypeAlter,requestType),
xdm.source.cloud.region=ProtoLocation,
xdm.target.resource.id=resourceID,
xdm.target.resource.type=resourceType,
xdm.intermediate.cloud.provider=if(_collector_type contains "GCP", XDM_CONST.CLOUD_PROVIDER_GCP,to_string(arrayindex(regextract(_collector_type,"(\w+)\s"),0)));